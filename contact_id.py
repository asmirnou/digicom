import re
from enum import Enum


class _DataType(Enum):
    zone = 'zone'
    user = 'user'


class _EventQualifier(Enum):
    opening = '1'
    closing = '3'
    status = '6'


_EVENTS = {
    '100': ('Medical', _DataType.zone),
    '101': ('Personal Emergency', _DataType.zone),
    '102': ('Fail to report in', _DataType.zone),
    '110': ('Fire', _DataType.zone),
    '111': ('Smoke', _DataType.zone),
    '112': ('Combustion', _DataType.zone),
    '113': ('Water flow', _DataType.zone),
    '114': ('Heat', _DataType.zone),
    '115': ('Pull Station', _DataType.zone),
    '116': ('Duct', _DataType.zone),
    '117': ('Flame', _DataType.zone),
    '118': ('Near Alarm', _DataType.zone),
    '120': ('Panic', _DataType.zone),
    '121': ('Duress', _DataType.user),
    '122': ('Silent', _DataType.zone),
    '123': ('Audible', _DataType.zone),
    '124': ('Duress – Access granted', _DataType.zone),
    '125': ('Duress – Egress granted', _DataType.zone),
    '130': ('Burglary', _DataType.zone),
    '131': ('Perimeter', _DataType.zone),
    '132': ('Interior', _DataType.zone),
    '133': ('24 Hour (Safe)', _DataType.zone),
    '134': ('Entry/Exit', _DataType.zone),
    '135': ('Day/night', _DataType.zone),
    '136': ('Outdoor', _DataType.zone),
    '137': ('Tamper', _DataType.zone),
    '138': ('Near alarm', _DataType.zone),
    '139': ('Intrusion Verifier', _DataType.zone),
    '140': ('General Alarm', _DataType.zone),
    '141': ('Polling loop open', _DataType.zone),
    '142': ('Polling loop short', _DataType.zone),
    '143': ('Expansion module failure', _DataType.zone),
    '144': ('Sensor tamper', _DataType.zone),
    '145': ('Expansion module tamper', _DataType.zone),
    '146': ('Silent Burglary', _DataType.zone),
    '147': ('Sensor Supervision Failure', _DataType.zone),
    '150': ('24 Hour Non- Burglary', _DataType.zone),
    '151': ('Gas detected', _DataType.zone),
    '152': ('Refrigeration', _DataType.zone),
    '153': ('Loss of heat', _DataType.zone),
    '154': ('Water Leakage', _DataType.zone),
    '155': ('Foil Break', _DataType.zone),
    '156': ('Day Trouble', _DataType.zone),
    '157': ('Low bottled gas level', _DataType.zone),
    '158': ('High temp', _DataType.zone),
    '159': ('Low temp', _DataType.zone),
    '161': ('Loss of air flow', _DataType.zone),
    '162': ('Carbon Monoxide detected', _DataType.zone),
    '163': ('Tank level', _DataType.zone),
    '200': ('Fire Supervisory', _DataType.zone),
    '201': ('Low water pressure', _DataType.zone),
    '202': ('Low CO2', _DataType.zone),
    '203': ('Gate valve sensor', _DataType.zone),
    '204': ('Low water level', _DataType.zone),
    '205': ('Pump activated', _DataType.zone),
    '206': ('Pump failure', _DataType.zone),
    '300': ('System Trouble', _DataType.zone),
    '301': ('AC Loss', _DataType.zone),
    '302': ('Low system battery', _DataType.zone),
    '303': ('RAM Checksum bad', _DataType.zone),
    '304': ('ROM checksum bad', _DataType.zone),
    '305': ('System reset', _DataType.zone),
    '306': ('Panel programming changed', _DataType.zone),
    '307': ('Self- test failure', _DataType.zone),
    '308': ('System shutdown', _DataType.zone),
    '309': ('Battery test failure', _DataType.zone),
    '310': ('Ground fault', _DataType.zone),
    '311': ('Battery Missing/Dead', _DataType.zone),
    '312': ('Power Supply Overcurrent', _DataType.zone),
    '313': ('Engineer Reset', _DataType.user),
    '320': ('Sounder/Relay', _DataType.zone),
    '321': ('Bell 1', _DataType.zone),
    '322': ('Bell 2', _DataType.zone),
    '323': ('Alarm relay', _DataType.zone),
    '324': ('Trouble relay', _DataType.zone),
    '325': ('Reversing relay', _DataType.zone),
    '326': ('Notification Appliance Ckt. # 3', _DataType.zone),
    '327': ('Notification Appliance Ckt. # 4', _DataType.zone),
    '330': ('System Peripheral trouble', _DataType.zone),
    '331': ('Polling loop open', _DataType.zone),
    '332': ('Polling loop short', _DataType.zone),
    '333': ('Expansion module failure', _DataType.zone),
    '334': ('Repeater failure', _DataType.zone),
    '335': ('Local printer out of paper', _DataType.zone),
    '336': ('Local printer failure', _DataType.zone),
    '337': ('Exp. Module DC Loss', _DataType.zone),
    '338': ('Exp. Module Low Batt.', _DataType.zone),
    '339': ('Exp. Module Reset', _DataType.zone),
    '341': ('Exp. Module Tamper', _DataType.zone),
    '342': ('Exp. Module AC Loss', _DataType.zone),
    '343': ('Exp. Module self-test fail', _DataType.zone),
    '344': ('RF Receiver Jam Detect', _DataType.zone),
    '350': ('Communication trouble', _DataType.zone),
    '351': ('Telco 1 fault', _DataType.zone),
    '352': ('Telco 2 fault', _DataType.zone),
    '353': ('Long Range Radio xmitter fault', _DataType.zone),
    '354': ('Failure to communicate event', _DataType.zone),
    '355': ('Loss of Radio supervision', _DataType.zone),
    '356': ('Loss of central polling', _DataType.zone),
    '357': ('Long Range Radio VSWR problem', _DataType.zone),
    '370': ('Protection loop', _DataType.zone),
    '371': ('Protection loop open', _DataType.zone),
    '372': ('Protection loop short', _DataType.zone),
    '373': ('Fire trouble', _DataType.zone),
    '374': ('Exit error alarm (zone)', _DataType.zone),
    '375': ('Panic zone trouble', _DataType.zone),
    '376': ('Hold-up zone trouble', _DataType.zone),
    '377': ('Swinger Trouble', _DataType.zone),
    '378': ('Cross-zone Trouble', _DataType.zone),
    '380': ('Sensor trouble', _DataType.zone),
    '381': ('Loss of supervision - RF', _DataType.zone),
    '382': ('Loss of supervision - RPM', _DataType.zone),
    '383': ('Sensor tamper', _DataType.zone),
    '384': ('RF low battery', _DataType.zone),
    '385': ('Smoke detector Hi sensitivity', _DataType.zone),
    '386': ('Smoke detector Low sensitivity', _DataType.zone),
    '387': ('Intrusion detector Hi sensitivity', _DataType.zone),
    '388': ('Intrusion detector Low sensitivity', _DataType.zone),
    '389': ('Sensor self-test failure', _DataType.zone),
    '391': ('Sensor Watch trouble', _DataType.zone),
    '392': ('Drift Compensation Error', _DataType.zone),
    '393': ('Maintenance Alert', _DataType.zone),
    '400': ('Open/Close', _DataType.user),
    '401': ('O/C by user', _DataType.user),
    '402': ('Group O/C', _DataType.user),
    '403': ('Automatic O/C', _DataType.user),
    '404': ('Late to O/C', _DataType.user),
    '405': ('Deferred O/C', _DataType.user),
    '406': ('Cancel', _DataType.user),
    '407': ('Remote arm/disarm', _DataType.user),
    '408': ('Quick arm', _DataType.user),
    '409': ('Keyswitch O/C', _DataType.user),
    '441': ('Armed STAY', _DataType.user),
    '442': ('Keyswitch Armed STAY', _DataType.user),
    '450': ('Exception O/C', _DataType.user),
    '451': ('Early O/C', _DataType.user),
    '452': ('Late O/C', _DataType.user),
    '453': ('Failed to Open', _DataType.user),
    '454': ('Failed to Close', _DataType.user),
    '455': ('Auto-arm Failed', _DataType.user),
    '456': ('Partial Arm', _DataType.user),
    '457': ('Exit Error (user)', _DataType.user),
    '458': ('User on Premises', _DataType.user),
    '459': ('Recent Close', _DataType.user),
    '461': ('Wrong Code Entry', _DataType.zone),
    '462': ('Legal Code Entry', _DataType.user),
    '463': ('Re-arm after Alarm', _DataType.user),
    '464': ('Auto-arm Time Extended', _DataType.user),
    '465': ('Panic Alarm Reset', _DataType.zone),
    '466': ('Service On/Off Premises', _DataType.user),
    '411': ('Callback request made', _DataType.user),
    '412': ('Successful download/access', _DataType.user),
    '413': ('Unsuccessful access', _DataType.user),
    '414': ('System shutdown command received', _DataType.user),
    '415': ('Dialer shutdown command received', _DataType.user),
    '416': ('Successful Upload', _DataType.zone),
    '421': ('Access denied', _DataType.user),
    '422': ('Access report by user', _DataType.user),
    '423': ('Forced Access', _DataType.zone),
    '424': ('Egress Denied', _DataType.user),
    '425': ('Egress Granted', _DataType.user),
    '426': ('Access Door propped open', _DataType.zone),
    '427': ('Access point Door Status Monitor trouble', _DataType.zone),
    '428': ('Access point Request To Exit trouble', _DataType.zone),
    '429': ('Access program mode entry', _DataType.user),
    '430': ('Access program mode exit', _DataType.user),
    '431': ('Access threat level change', _DataType.user),
    '432': ('Access relay/trigger fail', _DataType.zone),
    '433': ('Access RTE shunt', _DataType.zone),
    '434': ('Access DSM shunt', _DataType.zone),
    '501': ('Access reader disable', _DataType.zone),
    '520': ('Sounder/Relay Disable', _DataType.zone),
    '521': ('Bell 1 disable', _DataType.zone),
    '522': ('Bell 2 disable', _DataType.zone),
    '523': ('Alarm relay disable', _DataType.zone),
    '524': ('Trouble relay disable', _DataType.zone),
    '525': ('Reversing relay disable', _DataType.zone),
    '526': ('Notification Appliance Ckt. # 3 disable', _DataType.zone),
    '527': ('Notification Appliance Ckt. # 4 disable', _DataType.zone),
    '531': ('Module Added', _DataType.zone),
    '532': ('Module Removed', _DataType.zone),
    '551': ('Dialer disabled', _DataType.zone),
    '552': ('Radio transmitter disabled', _DataType.zone),
    '553': ('Remote Upload/Download disabled', _DataType.zone),
    '570': ('Zone/Sensor bypass', _DataType.zone),
    '571': ('Fire bypass', _DataType.zone),
    '572': ('24 Hour zone bypass', _DataType.zone),
    '573': ('Burg. Bypass', _DataType.zone),
    '574': ('Group bypass', _DataType.user),
    '575': ('Swinger bypass', _DataType.zone),
    '576': ('Access zone shunt', _DataType.zone),
    '577': ('Access point bypass', _DataType.zone),
    '601': ('Manual trigger test report', _DataType.zone),
    '602': ('Periodic test report', _DataType.zone),
    '603': ('Periodic RF transmission', _DataType.zone),
    '604': ('Fire test', _DataType.user),
    '605': ('Status report to follow', _DataType.zone),
    '606': ('Listen- in to follow', _DataType.zone),
    '607': ('Walk test mode', _DataType.user),
    '608': ('Periodic test - System Trouble Present', _DataType.zone),
    '609': ('Video Xmitter active', _DataType.zone),
    '611': ('Point tested OK', _DataType.zone),
    '612': ('Point not tested', _DataType.zone),
    '613': ('Intrusion Zone Walk Tested', _DataType.zone),
    '614': ('Fire Zone Walk Tested', _DataType.zone),
    '615': ('Panic Zone Walk Tested', _DataType.zone),
    '616': ('Service Request', _DataType.zone),
    '621': ('Event Log reset', _DataType.zone),
    '622': ('Event Log 50% full', _DataType.zone),
    '623': ('Event Log 90% full', _DataType.zone),
    '624': ('Event Log overflow', _DataType.zone),
    '625': ('Time/Date reset', _DataType.user),
    '626': ('Time/Date inaccurate', _DataType.zone),
    '627': ('Program mode entry', _DataType.zone),
    '628': ('Program mode exit', _DataType.zone),
    '629': ('32 Hour Event log marker', _DataType.zone),
    '630': ('Schedule change', _DataType.zone),
    '631': ('Exception schedule change', _DataType.zone),
    '632': ('Access schedule change', _DataType.zone),
    '641': ('Senior Watch Trouble', _DataType.zone),
    '642': ('Latch-key Supervision', _DataType.user),
    '651': ('Reserved for Ademco Use', _DataType.zone),
    '652': ('Reserved for Ademco Use', _DataType.user),
    '653': ('Reserved for Ademco Use', _DataType.user),
    '654': ('System Inactivity', _DataType.zone),
}

_msg_pattern = re.compile(
    r'^(?P<ACCT>[0-9B-F]{4})(?:18|98)(?P<Q>[136])(?P<XYZ>[0-9B-F]{3})(?P<GG>[0-9B-F]{2})(?P<CCC>[0-9B-F]{3})(?:[0-9B-F]{1})$')


def _check_sum(msg):
    res = 0
    for c in msg:
        res += 10 if c == '0' else int(c, 16)
    return res % 15


def parse_message(msg):
    m = _msg_pattern.match(msg)
    assert m is not None
    assert _check_sum(msg) == 0

    account_number = m.group('ACCT')
    event_qualifier = _EventQualifier(m.group('Q'))
    event_code = m.group('XYZ')
    group_num = m.group('GG')
    zone_or_user_num = m.group('CCC')

    (event_name, data_type) = _EVENTS.get(event_code, ('Unknown', _DataType.zone))

    event = {
        'account': account_number,
        'type': event_qualifier.name,
        'code': event_code,
        'name': event_name,
    }

    if group_num != '00':
        event['group'] = group_num.lstrip('0')

    if zone_or_user_num != '000':
        event[data_type.value] = zone_or_user_num.lstrip('0')

    return event


if __name__ == '__main__':
    for msg in ['1234183350010009',
                '1234181131010158',
                '1234183131010156',
                '123418162701000E',
                '123418362701000C',
                '1234183401010016',
                '1234181401020035',
                '123418340103005F',
                '123418113401002E',
                '1234181406010009',
                '1234181401010018',
                '123418314001000C',
                '123418162701000E',
                '123418362701000C',
                '1234183401010016',
                '123418113401002E',
                '1234181130010037',
                '1234181139010001',
                '1234181401010018',
                '123418314001000C']:
        print(parse_message(msg))
